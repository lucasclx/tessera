spring.application.name=tessera

# Server Port
server.port=8080

# MySQL Database (exemplo, ajuste para sua configuração)
spring.datasource.url=jdbc:mysql://localhost:3306/tessera_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver # Já deve estar no seu pom.xml via mysql-connector-j

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update # ou create para desenvolvimento, ou validate/none para produção
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect # Específico para MySQL

# H2 Console (se você quiser usar H2 para desenvolvimento rápido, descomente e ajuste o pom.xml)
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.datasource.url=jdbc:h2:mem:tesseradb # Para H2 em memória
# spring.datasource.driverClassName=org.h2.Driver # Para H2
# spring.datasource.username=sa # Para H2
# spring.datasource.password=password # Para H2
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect # Para H2

# JWT Properties
# Gere uma chave secreta FORTE e LONGA (ex: usando um gerador online ou UUID.randomUUID().toString())
# Esta chave deve ter pelo menos 256 bits para HS256. Uma string longa aleatória é uma boa prática.
jwt.secret=SEU_SEGREDO_SUPER_SEGURO_PARA_JWT_DEVE_SER_BEM_LONGO_E_COMPLEXO_AQUI_MINIMO_32_CARACTERES_BYTES_PARA_HS256
jwt.expiration=86400000 # 24 horas em milissegundos (1 dia * 24 horas * 60 min * 60 seg * 1000 ms)