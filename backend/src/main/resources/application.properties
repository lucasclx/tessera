spring.application.name=tessera

# Perfil ativo (pode ser substituído por variável de ambiente SPRING_PROFILES_ACTIVE)
spring.profiles.active=dev

# Server Port
server.port=8080

# MySQL Database
spring.datasource.url=jdbc:mysql://localhost:3306/tessera_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Embora o Hibernate possa detectar, é bom manter por clareza (comentário movido para linha separada)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JWT Properties - Chave segura para JWT
jwt.secret=e8bbc656b6d4bca2b7e9f292d18082a0af114bdf2b0f8e98f9aefffad9f7e60832eb3f0859195dd40f3c51e1611c8790
# 24 horas em milissegundos (1 dia * 24 horas * 60 min * 60 seg * 1000 ms)
jwt.expiration=86400000

# Logging
logging.level.org.springframework.security=INFO
# Ajustado para DEBUG se precisar de mais detalhes do seu código
logging.level.com.backend.tessera=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Server compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain

# Pretty JSON responses
spring.jackson.serialization.indent-output=true

# URL base da aplicação cliente (frontend)
app.client.base-url=http://localhost:4200

# Duração dos tokens em milissegundos
# Token de verificação de email (ex: 24 horas = 24 * 60 * 60 * 1000 = 86400000)
app.token.email.verification.duration=86400000

# Token de redefinição de senha (ex: 1 hora = 60 * 60 * 1000 = 3600000)
app.token.password.reset.duration=3600000